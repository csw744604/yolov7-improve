def kmeans_plusplus_init(boxes, k):
    n = boxes.shape[0]
    centers = []
    # 随机选择第一个中心
    first_idx = np.random.randint(n)
    centers.append(boxes[first_idx])
    # 选择剩余k-1个中心
    for _ in range(1, k):
        # 计算每个样本到最近中心的距离
        distances = np.array([min(np.linalg.norm(box - center) for box in boxes for center in centers])
        distances = distances.reshape(n, -1).min(axis=1)
        # 轮盘法选择下一个中心
        probabilities = distances / distances.sum()
        next_idx = np.random.choice(n, p=probabilities)
        centers.append(boxes[next_idx])
return np.array(centers)


#autoanchor_init.py
from utils.autoanchor import kmean_anchors
# 运行 kmean_anchors 函数
new_anchors = kmean_anchors(path=r'D:\yolov7-main\NEU-DET\NEU-DET\data.yaml', n=9, img_size=640, thr=4.0, gen=1000, verbose=True)
